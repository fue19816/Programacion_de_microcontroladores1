

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 09 17:09:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218                           
   219                           	psect	idataBANK0
   220  01DF                     __pidataBANK0:
   221                           
   222                           ;initializer for _ban
   223  01DF  3401               	retlw	1
   224  01E0  3400               	retlw	0
   225                           
   226                           ;initializer for _txt2
   227  01E1  345B               	retlw	91
   228  01E2  3432               	retlw	50
   229  01E3  345D               	retlw	93
   230  01E4  3420               	retlw	32
   231  01E5  3443               	retlw	67
   232  01E6  3461               	retlw	97
   233  01E7  346D               	retlw	109
   234  01E8  3462               	retlw	98
   235  01E9  3469               	retlw	105
   236  01EA  3461               	retlw	97
   237  01EB  3472               	retlw	114
   238  01EC  3420               	retlw	32
   239  01ED  3450               	retlw	80
   240  01EE  344F               	retlw	79
   241  01EF  3452               	retlw	82
   242  01F0  3454               	retlw	84
   243  01F1  3441               	retlw	65
   244  01F2  3441               	retlw	65
   245  01F3  3400               	retlw	0
   246                           
   247                           ;initializer for _txt3
   248  01F4  345B               	retlw	91
   249  01F5  3433               	retlw	51
   250  01F6  345D               	retlw	93
   251  01F7  3420               	retlw	32
   252  01F8  3443               	retlw	67
   253  01F9  3461               	retlw	97
   254  01FA  346D               	retlw	109
   255  01FB  3462               	retlw	98
   256  01FC  3469               	retlw	105
   257  01FD  3461               	retlw	97
   258  01FE  3472               	retlw	114
   259  01FF  3420               	retlw	32
   260  0200  3450               	retlw	80
   261  0201  344F               	retlw	79
   262  0202  3452               	retlw	82
   263  0203  3454               	retlw	84
   264  0204  3442               	retlw	66
   265  0205  3400               	retlw	0
   266                           
   267                           ;initializer for _cad
   268  0206  3461               	retlw	97
   269  0207  3462               	retlw	98
   270  0208  3463               	retlw	99
   271  0209  3464               	retlw	100
   272  020A  3465               	retlw	101
   273  020B  3466               	retlw	102
   274  020C  3467               	retlw	103
   275  020D  3468               	retlw	104
   276  020E  3400               	retlw	0
   277                           
   278                           	psect	idataBANK1
   279  0131                     __pidataBANK1:
   280                           
   281                           ;initializer for _txt1
   282  0131  345B               	retlw	91
   283  0132  3431               	retlw	49
   284  0133  345D               	retlw	93
   285  0134  3420               	retlw	32
   286  0135  3444               	retlw	68
   287  0136  3465               	retlw	101
   288  0137  3473               	retlw	115
   289  0138  3470               	retlw	112
   290  0139  346C               	retlw	108
   291  013A  3465               	retlw	101
   292  013B  3467               	retlw	103
   293  013C  3461               	retlw	97
   294  013D  3472               	retlw	114
   295  013E  3420               	retlw	32
   296  013F  3463               	retlw	99
   297  0140  3461               	retlw	97
   298  0141  3464               	retlw	100
   299  0142  3465               	retlw	101
   300  0143  346E               	retlw	110
   301  0144  3461               	retlw	97
   302  0145  3420               	retlw	32
   303  0146  3464               	retlw	100
   304  0147  3465               	retlw	101
   305  0148  3420               	retlw	32
   306  0149  3463               	retlw	99
   307  014A  3461               	retlw	97
   308  014B  3472               	retlw	114
   309  014C  3465               	retlw	101
   310  014D  3463               	retlw	99
   311  014E  3474               	retlw	116
   312  014F  3465               	retlw	101
   313  0150  3472               	retlw	114
   314  0151  3465               	retlw	101
   315  0152  3473               	retlw	115
   316  0153  3473               	retlw	115
   317  0154  3400               	retlw	0
   318                           
   319                           ;initializer for _txt
   320  0155  3451               	retlw	81
   321  0156  3475               	retlw	117
   322  0157  3465               	retlw	101
   323  0158  3420               	retlw	32
   324  0159  3461               	retlw	97
   325  015A  3463               	retlw	99
   326  015B  3463               	retlw	99
   327  015C  3469               	retlw	105
   328  015D  346F               	retlw	111
   329  015E  346E               	retlw	110
   330  015F  3420               	retlw	32
   331  0160  3464               	retlw	100
   332  0161  3465               	retlw	101
   333  0162  3473               	retlw	115
   334  0163  3465               	retlw	101
   335  0164  3461               	retlw	97
   336  0165  3420               	retlw	32
   337  0166  3465               	retlw	101
   338  0167  346A               	retlw	106
   339  0168  3465               	retlw	101
   340  0169  3463               	retlw	99
   341  016A  3475               	retlw	117
   342  016B  3474               	retlw	116
   343  016C  3461               	retlw	97
   344  016D  3472               	retlw	114
   345  016E  343F               	retlw	63
   346  016F  343F               	retlw	63
   347  0170  3400               	retlw	0
   348                           
   349                           	psect	idataBANK3
   350  00E9                     __pidataBANK3:
   351                           
   352                           ;initializer for _puertob
   353  00E9  3450               	retlw	80
   354  00EA  3472               	retlw	114
   355  00EB  3465               	retlw	101
   356  00EC  3473               	retlw	115
   357  00ED  3469               	retlw	105
   358  00EE  346F               	retlw	111
   359  00EF  346E               	retlw	110
   360  00F0  3465               	retlw	101
   361  00F1  3420               	retlw	32
   362  00F2  3475               	retlw	117
   363  00F3  346E               	retlw	110
   364  00F4  3461               	retlw	97
   365  00F5  3420               	retlw	32
   366  00F6  3474               	retlw	116
   367  00F7  3465               	retlw	101
   368  00F8  3463               	retlw	99
   369  00F9  346C               	retlw	108
   370  00FA  3461               	retlw	97
   371  00FB  3420               	retlw	32
   372  00FC  3470               	retlw	112
   373  00FD  3461               	retlw	97
   374  00FE  3472               	retlw	114
   375  00FF  3461               	retlw	97
   376  0100  3420               	retlw	32
   377  0101  3465               	retlw	101
   378  0102  346C               	retlw	108
   379  0103  3420               	retlw	32
   380  0104  3470               	retlw	112
   381  0105  3475               	retlw	117
   382  0106  3465               	retlw	101
   383  0107  3472               	retlw	114
   384  0108  3474               	retlw	116
   385  0109  346F               	retlw	111
   386  010A  3420               	retlw	32
   387  010B  3442               	retlw	66
   388  010C  3400               	retlw	0
   389                           
   390                           ;initializer for _puertoa
   391  010D  3450               	retlw	80
   392  010E  3472               	retlw	114
   393  010F  3465               	retlw	101
   394  0110  3473               	retlw	115
   395  0111  3469               	retlw	105
   396  0112  346F               	retlw	111
   397  0113  346E               	retlw	110
   398  0114  3465               	retlw	101
   399  0115  3420               	retlw	32
   400  0116  3475               	retlw	117
   401  0117  346E               	retlw	110
   402  0118  3461               	retlw	97
   403  0119  3420               	retlw	32
   404  011A  3474               	retlw	116
   405  011B  3465               	retlw	101
   406  011C  3463               	retlw	99
   407  011D  346C               	retlw	108
   408  011E  3461               	retlw	97
   409  011F  3420               	retlw	32
   410  0120  3470               	retlw	112
   411  0121  3461               	retlw	97
   412  0122  3472               	retlw	114
   413  0123  3461               	retlw	97
   414  0124  3420               	retlw	32
   415  0125  3465               	retlw	101
   416  0126  346C               	retlw	108
   417  0127  3420               	retlw	32
   418  0128  3470               	retlw	112
   419  0129  3475               	retlw	117
   420  012A  3465               	retlw	101
   421  012B  3472               	retlw	114
   422  012C  3474               	retlw	116
   423  012D  346F               	retlw	111
   424  012E  3420               	retlw	32
   425  012F  3441               	retlw	65
   426  0130  3400               	retlw	0
   427                           
   428                           	psect	strings
   429  028E                     __pstrings:
   430  028E                     stringtab:
   431  028E                     __stringtab:
   432  028E                     stringcode:	
   433                           ;	String table - string pointers are 1 byte each
   434                           
   435  028E                     stringdir:
   436  028E  3002               	movlw	high stringdir
   437  028F  008A               	movwf	10
   438  0290  0804               	movf	4,w
   439  0291  0A84               	incf	4,f
   440  0292  0782               	addwf	2,f
   441  0293                     __stringbase:
   442  0293  3400               	retlw	0
   443  0294                     __end_of__stringtab:
   444  0294                     _data:
   445  0294  3461               	retlw	97
   446  0295                     __end_of_data:
   447  0019                     _TXREG	set	25
   448  000B                     _INTCONbits	set	11
   449  0018                     _RCSTAbits	set	24
   450  0009                     _PORTE	set	9
   451  0008                     _PORTD	set	8
   452  0007                     _PORTC	set	7
   453  0006                     _PORTB	set	6
   454  0005                     _PORTA	set	5
   455  001A                     _RCREG	set	26
   456  000C                     _PIR1bits	set	12
   457  0064                     _TXIF	set	100
   458  008C                     _PIE1bits	set	140
   459  009A                     _SPBRGH	set	154
   460  0099                     _SPBRG	set	153
   461  0098                     _TXSTAbits	set	152
   462  008F                     _OSCCONbits	set	143
   463  0086                     _TRISB	set	134
   464  0085                     _TRISA	set	133
   465  0187                     _BAUDCTLbits	set	391
   466  0189                     _ANSELH	set	393
   467  0188                     _ANSEL	set	392
   468                           
   469                           	psect	cinit
   470  000F                     start_initialization:	
   471                           ; #config settings
   472                           
   473  000F                     __initialization:
   474                           
   475                           ; Initialize objects allocated to BANK3
   476  000F  1783               	bsf	3,7	;select IRP bank2
   477  0010  30D8               	movlw	low (__pdataBANK3+72)
   478  0011  00FD               	movwf	btemp+-1
   479  0012  3000               	movlw	high __pidataBANK3
   480  0013  00FE               	movwf	btemp
   481  0014  30E9               	movlw	low __pidataBANK3
   482  0015  00FF               	movwf	btemp+1
   483  0016  3090               	movlw	low __pdataBANK3
   484  0017  0084               	movwf	4
   485  0018  120A  118A  2275  120A  118A  	fcall	init_ram0
   486                           
   487                           ; Initialize objects allocated to BANK1
   488  001D  1383               	bcf	3,7	;select IRP bank0
   489  001E  30E0               	movlw	low (__pdataBANK1+64)
   490  001F  00FD               	movwf	btemp+-1
   491  0020  3001               	movlw	high __pidataBANK1
   492  0021  00FE               	movwf	btemp
   493  0022  3031               	movlw	low __pidataBANK1
   494  0023  00FF               	movwf	btemp+1
   495  0024  30A0               	movlw	low __pdataBANK1
   496  0025  0084               	movwf	4
   497  0026  120A  118A  2275  120A  118A  	fcall	init_ram0
   498                           
   499                           ; Initialize objects allocated to BANK0
   500  002B  3050               	movlw	low (__pdataBANK0+48)
   501  002C  00FD               	movwf	btemp+-1
   502  002D  3001               	movlw	high __pidataBANK0
   503  002E  00FE               	movwf	btemp
   504  002F  30DF               	movlw	low __pidataBANK0
   505  0030  00FF               	movwf	btemp+1
   506  0031  3020               	movlw	low __pdataBANK0
   507  0032  0084               	movwf	4
   508  0033  120A  118A  2275  120A  118A  	fcall	init_ram0
   509                           
   510                           ; Clear objects allocated to BANK0
   511  0038  01DB               	clrf	__pbssBANK0& (0+127)
   512                           
   513                           ; Clear objects allocated to COMMON
   514  0039  01F8               	clrf	__pbssCOMMON& (0+127)
   515  003A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   516  003B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   517  003C                     end_of_initialization:	
   518                           ;End of C runtime variable initialization code
   519                           
   520  003C                     __end_of__initialization:
   521  003C  0183               	clrf	3
   522  003D  120A  118A  2A3D   	ljmp	_main	;jump to C main() function
   523                           
   524                           	psect	bssCOMMON
   525  0078                     __pbssCOMMON:
   526  0078                     _d3:
   527  0078                     	ds	1
   528  0079                     _d2:
   529  0079                     	ds	1
   530  007A                     _dato:
   531  007A                     	ds	1
   532                           
   533                           	psect	bssBANK0
   534  005B                     __pbssBANK0:
   535  005B                     _b:
   536  005B                     	ds	1
   537                           
   538                           	psect	dataBANK0
   539  0020                     __pdataBANK0:
   540  0020                     _ban:
   541  0020                     	ds	2
   542  0022                     _txt2:
   543  0022                     	ds	19
   544  0035                     _txt3:
   545  0035                     	ds	18
   546  0047                     _cad:
   547  0047                     	ds	9
   548                           
   549                           	psect	dataBANK1
   550  00A0                     __pdataBANK1:
   551  00A0                     _txt1:
   552  00A0                     	ds	36
   553  00C4                     _txt:
   554  00C4                     	ds	28
   555                           
   556                           	psect	dataBANK3
   557  0190                     __pdataBANK3:
   558  0190                     _puertob:
   559  0190                     	ds	36
   560  01B4                     _puertoa:
   561  01B4                     	ds	36
   562                           
   563                           	psect	inittext
   564  0271                     init_fetch0:	
   565                           ;	Called with low address in FSR and high address in W
   566                           
   567  0271  087E               	movf	btemp,w
   568  0272  008A               	movwf	10
   569  0273  087F               	movf	btemp+1,w
   570  0274  0082               	movwf	2
   571  0275                     init_ram0:	
   572                           ;Called with:
   573                           ;	high address of idata address in btemp 
   574                           ;	low address of idata address in btemp+1 
   575                           ;	low address of data in FSR
   576                           ;	high address + 1 of data in btemp-1
   577                           
   578  0275  120A  118A  2271  120A  118A  	fcall	init_fetch0
   579  027A  0080               	movwf	0
   580  027B  0A84               	incf	4,f
   581  027C  0804               	movf	4,w
   582  027D  067D               	xorwf	btemp+-1,w
   583  027E  1903               	btfsc	3,2
   584  027F  3400               	retlw	0
   585  0280  0AFF               	incf	btemp+1,f
   586  0281  1903               	btfsc	3,2
   587  0282  0AFE               	incf	btemp,f
   588  0283  2A75               	goto	init_ram0
   589                           
   590                           	psect	cstackCOMMON
   591  0070                     __pcstackCOMMON:
   592  0070                     ?_setup:
   593  0070                     ?_menu:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_dato1:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_envio_char:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Interrupciones:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ??_Interrupciones:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_main:	
   609                           ; 1 bytes @ 0x0
   610                           
   611                           
   612                           ; 1 bytes @ 0x0
   613  0070                     	ds	3
   614  0073                     ??_setup:
   615  0073                     ??_envio_char:	
   616                           ; 1 bytes @ 0x3
   617                           
   618  0073                     envio_char@dato:	
   619                           ; 1 bytes @ 0x3
   620                           
   621                           
   622                           ; 1 bytes @ 0x3
   623  0073                     	ds	1
   624  0074                     ?_envio_caract:
   625  0074                     envio_caract@st:	
   626                           ; 1 bytes @ 0x4
   627                           
   628                           
   629                           ; 2 bytes @ 0x4
   630  0074                     	ds	2
   631  0076                     envio_caract@i:
   632                           
   633                           ; 2 bytes @ 0x6
   634  0076                     	ds	2
   635                           
   636                           	psect	cstackBANK0
   637  0050                     __pcstackBANK0:
   638  0050                     ??_envio_caract:
   639                           
   640                           ; 1 bytes @ 0x0
   641  0050                     	ds	3
   642  0053                     ??_dato1:
   643                           
   644                           ; 1 bytes @ 0x3
   645  0053                     	ds	3
   646  0056                     ??_menu:
   647                           
   648                           ; 1 bytes @ 0x6
   649  0056                     	ds	2
   650  0058                     ??_main:
   651                           
   652                           ; 1 bytes @ 0x8
   653  0058                     	ds	3
   654                           
   655                           	psect	maintext
   656  023D                     __pmaintext:	
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 81 in file "main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : B00/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       3       0       0       0
   679 ;;      Totals:         0       3       0       0       0
   680 ;;Total ram usage:        3 bytes
   681 ;; Hardware stack levels required when called:    5
   682 ;; This function calls:
   683 ;;		_menu
   684 ;;		_setup
   685 ;; This function is called by:
   686 ;;		Startup code after reset
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _main
   692  023D                     _main:
   693  023D                     l1056:	
   694                           ;incstack = 0
   695                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   696                           
   697                           
   698                           ;main.c: 82: 
   699  023D  120A  118A  220F  120A  118A  	fcall	_setup
   700  0242                     l1058:
   701                           
   702                           ;main.c: 87:     RCSTAbits.RX9 = 0;
   703  0242  3006               	movlw	6
   704  0243  1283               	bcf	3,5	;RP0=0, select bank0
   705  0244  1303               	bcf	3,6	;RP1=0, select bank0
   706  0245  00DA               	movwf	??_main+2
   707  0246  3013               	movlw	19
   708  0247  00D9               	movwf	??_main+1
   709  0248  30AD               	movlw	173
   710  0249  00D8               	movwf	??_main
   711  024A                     u327:
   712  024A  0BD8               	decfsz	??_main,f
   713  024B  2A4A               	goto	u327
   714  024C  0BD9               	decfsz	??_main+1,f
   715  024D  2A4A               	goto	u327
   716  024E  0BDA               	decfsz	??_main+2,f
   717  024F  2A4A               	goto	u327
   718  0250                     l1060:
   719                           
   720                           ;main.c: 88:     RCSTAbits.CREN = 1;
   721  0250  120A  118A  2040  120A  118A  	fcall	_menu
   722  0255  2A42               	goto	l1058
   723  0256  120A  118A  280C   	ljmp	start
   724  0259                     __end_of_main:
   725                           
   726                           	psect	text1
   727  020F                     __ptext1:	
   728 ;; *************** function _setup *****************
   729 ;; Defined at:
   730 ;;		line 96 in file "main.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    1
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           
   759                           ;psect for function _setup
   760  020F                     _setup:
   761  020F                     l744:	
   762                           ;incstack = 0
   763                           ; Regs used in _setup: [wreg+status,2]
   764                           
   765                           
   766                           ;main.c: 98: 
   767  020F  1683               	bsf	3,5	;RP0=1, select bank3
   768  0210  1703               	bsf	3,6	;RP1=1, select bank3
   769  0211  0188               	clrf	8	;volatile
   770                           
   771                           ;main.c: 99: void menu(void){
   772  0212  0189               	clrf	9	;volatile
   773                           
   774                           ;main.c: 101:      envio_caract(txt);
   775  0213  1683               	bsf	3,5	;RP0=1, select bank1
   776  0214  1303               	bcf	3,6	;RP1=0, select bank1
   777  0215  0185               	clrf	5	;volatile
   778                           
   779                           ;main.c: 102:      TXREG = '\r';
   780  0216  0186               	clrf	6	;volatile
   781                           
   782                           ;main.c: 104:      TXREG = '\r';
   783  0217  1283               	bcf	3,5	;RP0=0, select bank0
   784  0218  1303               	bcf	3,6	;RP1=0, select bank0
   785  0219  0185               	clrf	5	;volatile
   786                           
   787                           ;main.c: 105:      envio_caract(txt2);
   788  021A  0186               	clrf	6	;volatile
   789                           
   790                           ;main.c: 106:      TXREG = '\r';
   791  021B  0187               	clrf	7	;volatile
   792                           
   793                           ;main.c: 107:      envio_caract(txt3);
   794  021C  0188               	clrf	8	;volatile
   795                           
   796                           ;main.c: 108:      ban = 0;
   797  021D  0189               	clrf	9	;volatile
   798  021E                     l746:
   799                           
   800                           ;main.c: 111: 
   801  021E  1683               	bsf	3,5	;RP0=1, select bank1
   802  021F  1303               	bcf	3,6	;RP1=0, select bank1
   803  0220  170F               	bsf	15,6	;volatile
   804  0221                     l748:
   805                           
   806                           ;main.c: 112:     if (dato == '1'){
   807  0221  168F               	bsf	15,5	;volatile
   808  0222                     l750:
   809                           
   810                           ;main.c: 113:         dato1();
   811  0222  160F               	bsf	15,4	;volatile
   812  0223                     l752:
   813                           
   814                           ;main.c: 114:      }
   815  0223  140F               	bsf	15,0	;volatile
   816  0224                     l754:
   817                           
   818                           ;main.c: 117:         PORTA = 0x00;
   819  0224  1218               	bcf	24,4	;volatile
   820  0225                     l756:
   821                           
   822                           ;main.c: 118:         d2 = 1;
   823  0225  1118               	bcf	24,2	;volatile
   824  0226                     l758:
   825                           
   826                           ;main.c: 120:         _delay((unsigned long)((50)*(8000000/4000.0)));
   827  0226  1683               	bsf	3,5	;RP0=1, select bank3
   828  0227  1703               	bsf	3,6	;RP1=1, select bank3
   829  0228  1587               	bsf	7,3	;volatile
   830  0229                     l760:
   831                           
   832                           ;main.c: 122: 
   833  0229  3033               	movlw	51
   834  022A  1683               	bsf	3,5	;RP0=1, select bank1
   835  022B  1303               	bcf	3,6	;RP1=0, select bank1
   836  022C  0099               	movwf	25	;volatile
   837  022D                     l762:
   838                           
   839                           ;main.c: 123:         while(d2 == 1){
   840  022D  019A               	clrf	26	;volatile
   841  022E                     l764:
   842                           
   843                           ;main.c: 125:             b = 1;
   844  022E  1283               	bcf	3,5	;RP0=0, select bank0
   845  022F  1303               	bcf	3,6	;RP1=0, select bank0
   846  0230  1798               	bsf	24,7	;volatile
   847  0231                     l766:
   848                           
   849                           ;main.c: 126:         }
   850  0231  1318               	bcf	24,6	;volatile
   851  0232                     l768:
   852                           
   853                           ;main.c: 127:         dato = 0;
   854  0232  1618               	bsf	24,4	;volatile
   855  0233                     l770:
   856                           
   857                           ;main.c: 129:         TXREG = '\f';
   858  0233  1683               	bsf	3,5	;RP0=1, select bank1
   859  0234  1303               	bcf	3,6	;RP1=0, select bank1
   860  0235  1698               	bsf	24,5	;volatile
   861  0236                     l772:
   862                           
   863                           ;main.c: 132:     else if (dato == '3'){
   864  0236  170B               	bsf	11,6	;volatile
   865  0237                     l774:
   866                           
   867                           ;main.c: 133:         PORTB = 0x00;
   868  0237  168C               	bsf	12,5	;volatile
   869  0238                     l776:
   870                           
   871                           ;main.c: 134:         d3 = 1;
   872  0238  1283               	bcf	3,5	;RP0=0, select bank0
   873  0239  1303               	bcf	3,6	;RP1=0, select bank0
   874  023A  128C               	bcf	12,5	;volatile
   875  023B                     l778:
   876                           
   877                           ;main.c: 135:         TXREG = '\f';
   878  023B  178B               	bsf	11,7	;volatile
   879  023C                     l98:
   880  023C  0008               	return
   881  023D                     __end_of_setup:
   882                           
   883                           	psect	text2
   884  0040                     __ptext2:	
   885 ;; *************** function _menu *****************
   886 ;; Defined at:
   887 ;;		line 138 in file "main.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0
   903 ;;      Temps:          0       2       0       0       0
   904 ;;      Totals:         0       2       0       0       0
   905 ;;Total ram usage:        2 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    4
   908 ;; This function calls:
   909 ;;		_dato1
   910 ;;		_envio_caract
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _menu
   918  0040                     _menu:
   919  0040                     l988:	
   920                           ;incstack = 0
   921                           ; Regs used in _menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   922                           
   923                           
   924                           ;main.c: 139:         while(d3 == 1){
   925  0040  1283               	bcf	3,5	;RP0=0, select bank0
   926  0041  1303               	bcf	3,6	;RP1=0, select bank0
   927  0042  0320               	decf	_ban,w
   928  0043  0421               	iorwf	_ban+1,w
   929  0044  1D03               	btfss	3,2
   930  0045  2847               	goto	u261
   931  0046  2848               	goto	u260
   932  0047                     u261:
   933  0047  287D               	goto	l1004
   934  0048                     u260:
   935  0048                     l990:
   936                           
   937                           ;main.c: 140:             PORTB = RCREG;
   938  0048  30C4               	movlw	(low (_txt| 0))& (0+255)
   939  0049  00F4               	movwf	envio_caract@st
   940  004A  3000               	movlw	0
   941  004B  00F5               	movwf	envio_caract@st+1
   942  004C  120A  118A  2171  120A  118A  	fcall	_envio_caract
   943  0051                     l992:
   944                           
   945                           ;main.c: 141:             b = 1;
   946  0051  300D               	movlw	13
   947  0052  1283               	bcf	3,5	;RP0=0, select bank0
   948  0053  1303               	bcf	3,6	;RP1=0, select bank0
   949  0054  0099               	movwf	25	;volatile
   950  0055                     l994:
   951                           
   952                           ;main.c: 142:         }
   953  0055  30A0               	movlw	(low (_txt1| 0))& (0+255)
   954  0056  00F4               	movwf	envio_caract@st
   955  0057  3000               	movlw	0
   956  0058  00F5               	movwf	envio_caract@st+1
   957  0059  120A  118A  2171  120A  118A  	fcall	_envio_caract
   958                           
   959                           ;main.c: 143:         dato = 0;
   960  005E  300D               	movlw	13
   961  005F  1283               	bcf	3,5	;RP0=0, select bank0
   962  0060  1303               	bcf	3,6	;RP1=0, select bank0
   963  0061  0099               	movwf	25	;volatile
   964  0062                     l996:
   965                           
   966                           ;main.c: 144:         ban = 1;
   967  0062  3022               	movlw	(low (_txt2| 0))& (0+255)
   968  0063  00F4               	movwf	envio_caract@st
   969  0064  3000               	movlw	0
   970  0065  00F5               	movwf	envio_caract@st+1
   971  0066  120A  118A  2171  120A  118A  	fcall	_envio_caract
   972  006B                     l998:
   973                           
   974                           ;main.c: 145:         TXREG = '\f';
   975  006B  300D               	movlw	13
   976  006C  1283               	bcf	3,5	;RP0=0, select bank0
   977  006D  1303               	bcf	3,6	;RP1=0, select bank0
   978  006E  0099               	movwf	25	;volatile
   979                           
   980                           ;main.c: 146:     }
   981  006F  3035               	movlw	(low (_txt3| 0))& (0+255)
   982  0070  00F4               	movwf	envio_caract@st
   983  0071  3000               	movlw	0
   984  0072  00F5               	movwf	envio_caract@st+1
   985  0073  120A  118A  2171  120A  118A  	fcall	_envio_caract
   986  0078                     l1000:
   987                           
   988                           ;main.c: 147: }
   989  0078  1283               	bcf	3,5	;RP0=0, select bank0
   990  0079  1303               	bcf	3,6	;RP1=0, select bank0
   991  007A  01A0               	clrf	_ban
   992  007B  01A1               	clrf	_ban+1
   993  007C                     l1002:
   994                           
   995                           ;main.c: 148: 
   996  007C  01DB               	clrf	_b
   997  007D                     l1004:
   998                           
   999                           ;main.c: 151:     while (st[i] != 0){
  1000  007D  3031               	movlw	49
  1001  007E  067A               	xorwf	_dato,w
  1002  007F  1D03               	btfss	3,2
  1003  0080  2882               	goto	u271
  1004  0081  2883               	goto	u270
  1005  0082                     u271:
  1006  0082  2889               	goto	l1008
  1007  0083                     u270:
  1008  0083                     l1006:
  1009                           
  1010                           ;main.c: 152:         envio_char(st[i]);
  1011  0083  120A  118A  21AE  120A  118A  	fcall	_dato1
  1012                           
  1013                           ;main.c: 153:         i++;
  1014  0088  28E8               	goto	l113
  1015  0089                     l1008:
  1016  0089  3032               	movlw	50
  1017  008A  067A               	xorwf	_dato,w
  1018  008B  1D03               	btfss	3,2
  1019  008C  288E               	goto	u281
  1020  008D  288F               	goto	u280
  1021  008E                     u281:
  1022  008E  28BD               	goto	l1032
  1023  008F                     u280:
  1024  008F                     l1010:
  1025                           
  1026                           ;main.c: 156: 
  1027  008F  0185               	clrf	5	;volatile
  1028  0090                     l1012:
  1029                           
  1030                           ;main.c: 157: void envio_char(char dato){
  1031  0090  01F9               	clrf	_d2
  1032  0091  0AF9               	incf	_d2,f
  1033  0092                     l1014:
  1034                           
  1035                           ;main.c: 158:     while(!TXIF);
  1036  0092  300C               	movlw	12
  1037  0093  0099               	movwf	25	;volatile
  1038  0094                     l1016:
  1039                           
  1040                           ;main.c: 159:     TXREG = dato;
  1041  0094  3082               	movlw	130
  1042  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0097  00D7               	movwf	??_menu+1
  1045  0098  30DD               	movlw	221
  1046  0099  00D6               	movwf	??_menu
  1047  009A                     u337:
  1048  009A  0BD6               	decfsz	??_menu,f
  1049  009B  289A               	goto	u337
  1050  009C  0BD7               	decfsz	??_menu+1,f
  1051  009D  289A               	goto	u337
  1052  009E                     l1018:
  1053                           
  1054                           ;main.c: 160: }
  1055  009E  30B4               	movlw	(low (_puertoa| (0+256)))& (0+255)
  1056  009F  00F4               	movwf	envio_caract@st
  1057  00A0  3001               	movlw	1
  1058  00A1  00F5               	movwf	envio_caract@st+1
  1059  00A2  120A  118A  2171  120A  118A  	fcall	_envio_caract
  1060                           
  1061                           ;main.c: 162: void dato1 (void){
  1062  00A7  28AE               	goto	l1024
  1063  00A8                     l1020:
  1064                           
  1065                           ;main.c: 163:     TXREG = '\f';
  1066  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1067  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1068  00AA  081A               	movf	26,w	;volatile
  1069  00AB  0085               	movwf	5	;volatile
  1070  00AC                     l1022:
  1071                           
  1072                           ;main.c: 164:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1073  00AC  01DB               	clrf	_b
  1074  00AD  0ADB               	incf	_b,f
  1075  00AE                     l1024:
  1076                           
  1077                           ;main.c: 162: void dato1 (void){
  1078  00AE  0379               	decf	_d2,w
  1079  00AF  1903               	btfsc	3,2
  1080  00B0  28B2               	goto	u291
  1081  00B1  28B3               	goto	u290
  1082  00B2                     u291:
  1083  00B2  28A8               	goto	l1020
  1084  00B3                     u290:
  1085  00B3                     l1026:
  1086                           
  1087                           ;main.c: 166:     dato = 0;
  1088  00B3  01FA               	clrf	_dato
  1089  00B4                     l1028:
  1090                           
  1091                           ;main.c: 167:     ban = 1;
  1092  00B4  3001               	movlw	1
  1093  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1094  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1095  00B7  00A0               	movwf	_ban
  1096  00B8  3000               	movlw	0
  1097  00B9  00A1               	movwf	_ban+1
  1098  00BA                     l1030:
  1099                           
  1100                           ;main.c: 168:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1101  00BA  300C               	movlw	12
  1102  00BB  0099               	movwf	25	;volatile
  1103                           
  1104                           ;main.c: 169:     TXREG = '\f';
  1105  00BC  28E8               	goto	l113
  1106  00BD                     l1032:
  1107  00BD  3033               	movlw	51
  1108  00BE  067A               	xorwf	_dato,w
  1109  00BF  1D03               	btfss	3,2
  1110  00C0  28C2               	goto	u301
  1111  00C1  28C3               	goto	u300
  1112  00C2                     u301:
  1113  00C2  28E8               	goto	l113
  1114  00C3                     u300:
  1115  00C3                     l1034:
  1116  00C3  0186               	clrf	6	;volatile
  1117  00C4                     l1036:
  1118  00C4  01F8               	clrf	_d3
  1119  00C5  0AF8               	incf	_d3,f
  1120  00C6                     l1038:
  1121  00C6  300C               	movlw	12
  1122  00C7  0099               	movwf	25	;volatile
  1123  00C8                     l1040:
  1124  00C8  3082               	movlw	130
  1125  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1126  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1127  00CB  00D7               	movwf	??_menu+1
  1128  00CC  30DD               	movlw	221
  1129  00CD  00D6               	movwf	??_menu
  1130  00CE                     u347:
  1131  00CE  0BD6               	decfsz	??_menu,f
  1132  00CF  28CE               	goto	u347
  1133  00D0  0BD7               	decfsz	??_menu+1,f
  1134  00D1  28CE               	goto	u347
  1135  00D2                     l1042:
  1136  00D2  3090               	movlw	(low (_puertob| (0+256)))& (0+255)
  1137  00D3  00F4               	movwf	envio_caract@st
  1138  00D4  3001               	movlw	1
  1139  00D5  00F5               	movwf	envio_caract@st+1
  1140  00D6  120A  118A  2171  120A  118A  	fcall	_envio_caract
  1141  00DB  28E2               	goto	l1048
  1142  00DC                     l1044:
  1143  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1144  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1145  00DE  081A               	movf	26,w	;volatile
  1146  00DF  0086               	movwf	6	;volatile
  1147  00E0                     l1046:
  1148  00E0  01DB               	clrf	_b
  1149  00E1  0ADB               	incf	_b,f
  1150  00E2                     l1048:
  1151  00E2  0378               	decf	_d3,w
  1152  00E3  1903               	btfsc	3,2
  1153  00E4  28E6               	goto	u311
  1154  00E5  28E7               	goto	u310
  1155  00E6                     u311:
  1156  00E6  28DC               	goto	l1044
  1157  00E7                     u310:
  1158  00E7  28B3               	goto	l1026
  1159  00E8                     l113:
  1160  00E8  0008               	return
  1161  00E9                     __end_of_menu:
  1162                           
  1163                           	psect	text3
  1164  01AE                     __ptext3:	
  1165 ;; *************** function _dato1 *****************
  1166 ;; Defined at:
  1167 ;;		line 201 in file "main.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         0       0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0
  1183 ;;      Temps:          0       3       0       0       0
  1184 ;;      Totals:         0       3       0       0       0
  1185 ;;Total ram usage:        3 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    3
  1188 ;; This function calls:
  1189 ;;		_envio_caract
  1190 ;; This function is called by:
  1191 ;;		_menu
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _dato1
  1197  01AE                     _dato1:
  1198  01AE                     l976:	
  1199                           ;incstack = 0
  1200                           ; Regs used in _dato1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1201                           
  1202  01AE  300C               	movlw	12
  1203  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1204  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1205  01B1  0099               	movwf	25	;volatile
  1206  01B2  3082               	movlw	130
  1207  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1208  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1209  01B5  00D4               	movwf	??_dato1+1
  1210  01B6  30DD               	movlw	221
  1211  01B7  00D3               	movwf	??_dato1
  1212  01B8                     u357:
  1213  01B8  0BD3               	decfsz	??_dato1,f
  1214  01B9  29B8               	goto	u357
  1215  01BA  0BD4               	decfsz	??_dato1+1,f
  1216  01BB  29B8               	goto	u357
  1217  01BC                     l978:
  1218  01BC  3047               	movlw	(low (_cad| 0))& (0+255)
  1219  01BD  00F4               	movwf	envio_caract@st
  1220  01BE  3000               	movlw	0
  1221  01BF  00F5               	movwf	envio_caract@st+1
  1222  01C0  120A  118A  2171  120A  118A  	fcall	_envio_caract
  1223  01C5                     l980:
  1224  01C5  01FA               	clrf	_dato
  1225  01C6                     l982:
  1226  01C6  3001               	movlw	1
  1227  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1228  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1229  01C9  00A0               	movwf	_ban
  1230  01CA  3000               	movlw	0
  1231  01CB  00A1               	movwf	_ban+1
  1232  01CC                     l984:
  1233  01CC  3006               	movlw	6
  1234  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1235  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1236  01CF  00D5               	movwf	??_dato1+2
  1237  01D0  3013               	movlw	19
  1238  01D1  00D4               	movwf	??_dato1+1
  1239  01D2  30AD               	movlw	173
  1240  01D3  00D3               	movwf	??_dato1
  1241  01D4                     u367:
  1242  01D4  0BD3               	decfsz	??_dato1,f
  1243  01D5  29D4               	goto	u367
  1244  01D6  0BD4               	decfsz	??_dato1+1,f
  1245  01D7  29D4               	goto	u367
  1246  01D8  0BD5               	decfsz	??_dato1+2,f
  1247  01D9  29D4               	goto	u367
  1248  01DA                     l986:
  1249  01DA  300C               	movlw	12
  1250  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1251  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1252  01DD  0099               	movwf	25	;volatile
  1253  01DE                     l128:
  1254  01DE  0008               	return
  1255  01DF                     __end_of_dato1:
  1256                           
  1257                           	psect	text4
  1258  0171                     __ptext4:	
  1259 ;; *************** function _envio_caract *****************
  1260 ;; Defined at:
  1261 ;;		line 188 in file "main.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  st              2    4[COMMON] PTR unsigned char 
  1264 ;;		 -> cad(9), puertob(36), puertoa(36), txt3(18), 
  1265 ;;		 -> txt2(19), txt1(36), txt(28), 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  i               2    6[COMMON] int 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         2       0       0       0       0
  1278 ;;      Locals:         2       0       0       0       0
  1279 ;;      Temps:          0       3       0       0       0
  1280 ;;      Totals:         4       3       0       0       0
  1281 ;;Total ram usage:        7 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    2
  1284 ;; This function calls:
  1285 ;;		_envio_char
  1286 ;; This function is called by:
  1287 ;;		_menu
  1288 ;;		_dato1
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _envio_caract
  1294  0171                     _envio_caract:
  1295  0171                     l968:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _envio_caract: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1298                           
  1299  0171  01F6               	clrf	envio_caract@i
  1300  0172  01F7               	clrf	envio_caract@i+1
  1301  0173  2993               	goto	l974
  1302  0174                     l970:
  1303  0174  0876               	movf	envio_caract@i,w
  1304  0175  0774               	addwf	envio_caract@st,w
  1305  0176  00D1               	movwf	??_envio_caract+1
  1306  0177  0875               	movf	envio_caract@st+1,w
  1307  0178  00D0               	movwf	??_envio_caract
  1308  0179  1803               	skipnc
  1309  017A  0AD0               	incf	??_envio_caract,f
  1310  017B  1FF6               	btfss	envio_caract@i,7
  1311  017C  297E               	goto	u230
  1312  017D  03D0               	decf	??_envio_caract,f
  1313  017E                     u230:
  1314  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1315  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0180  0850               	movf	??_envio_caract,w
  1317  0181  00D2               	movwf	??_envio_caract+2
  1318  0182  0851               	movf	??_envio_caract+1,w
  1319  0183  0084               	movwf	4
  1320  0184  1783               	bsf	3,7
  1321  0185  1C52               	btfss	??_envio_caract+2,0
  1322  0186  1383               	bcf	3,7
  1323  0187  0800               	movf	0,w
  1324  0188  120A  118A  2284  120A  118A  	fcall	_envio_char
  1325  018D                     l972:
  1326  018D  3001               	movlw	1
  1327  018E  07F6               	addwf	envio_caract@i,f
  1328  018F  1803               	skipnc
  1329  0190  0AF7               	incf	envio_caract@i+1,f
  1330  0191  3000               	movlw	0
  1331  0192  07F7               	addwf	envio_caract@i+1,f
  1332  0193                     l974:
  1333  0193  0876               	movf	envio_caract@i,w
  1334  0194  0774               	addwf	envio_caract@st,w
  1335  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0197  00D1               	movwf	??_envio_caract+1
  1338  0198  0875               	movf	envio_caract@st+1,w
  1339  0199  00D0               	movwf	??_envio_caract
  1340  019A  1803               	skipnc
  1341  019B  0AD0               	incf	??_envio_caract,f
  1342  019C  1FF6               	btfss	envio_caract@i,7
  1343  019D  299F               	goto	u240
  1344  019E  03D0               	decf	??_envio_caract,f
  1345  019F                     u240:
  1346  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1347  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1348  01A1  0850               	movf	??_envio_caract,w
  1349  01A2  00D2               	movwf	??_envio_caract+2
  1350  01A3  0851               	movf	??_envio_caract+1,w
  1351  01A4  0084               	movwf	4
  1352  01A5  1783               	bsf	3,7
  1353  01A6  1C52               	btfss	??_envio_caract+2,0
  1354  01A7  1383               	bcf	3,7
  1355  01A8  0800               	movf	0,w
  1356  01A9  1D03               	btfss	3,2
  1357  01AA  29AC               	goto	u251
  1358  01AB  29AD               	goto	u250
  1359  01AC                     u251:
  1360  01AC  2974               	goto	l970
  1361  01AD                     u250:
  1362  01AD                     l119:
  1363  01AD  0008               	return
  1364  01AE                     __end_of_envio_caract:
  1365                           
  1366                           	psect	text5
  1367  0284                     __ptext5:	
  1368 ;; *************** function _envio_char *****************
  1369 ;; Defined at:
  1370 ;;		line 196 in file "main.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  dato            1    wreg     unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  dato            1    3[COMMON] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0
  1387 ;;      Totals:         1       0       0       0       0
  1388 ;;Total ram usage:        1 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_envio_caract
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _envio_char
  1400  0284                     _envio_char:
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _envio_char: [wreg]
  1404                           ;envio_char@dato stored from wreg
  1405  0284  00F3               	movwf	envio_char@dato
  1406  0285                     l862:
  1407  0285                     l122:
  1408  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0287  1E0C               	btfss	12,4	;volatile
  1411  0288  2A8A               	goto	u111
  1412  0289  2A8B               	goto	u110
  1413  028A                     u111:
  1414  028A  2A85               	goto	l122
  1415  028B                     u110:
  1416  028B                     l864:
  1417  028B  0873               	movf	envio_char@dato,w
  1418  028C  0099               	movwf	25	;volatile
  1419  028D                     l125:
  1420  028D  0008               	return
  1421  028E                     __end_of_envio_char:
  1422                           
  1423                           	psect	text6
  1424  0259                     __ptext6:	
  1425 ;; *************** function _Interrupciones *****************
  1426 ;; Defined at:
  1427 ;;		line 67 in file "main.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0
  1443 ;;      Temps:          3       0       0       0       0
  1444 ;;      Totals:         3       0       0       0       0
  1445 ;;Total ram usage:        3 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		Interrupt level 1
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           
  1455                           ;psect for function _Interrupciones
  1456  0259                     _Interrupciones:
  1457  0259                     i1l954:
  1458                           
  1459                           ;main.c: 68:     PORTD = 0x00;
  1460  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1461  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1462  025B  1E8C               	btfss	12,5	;volatile
  1463  025C  2A5E               	goto	u21_21
  1464  025D  2A5F               	goto	u21_20
  1465  025E                     u21_21:
  1466  025E  2A6A               	goto	i1l87
  1467  025F                     u21_20:
  1468  025F                     i1l956:
  1469                           
  1470                           ;main.c: 69:     PORTE = 0x00;
  1471  025F  081A               	movf	26,w	;volatile
  1472  0260  00F0               	movwf	??_Interrupciones
  1473  0261  0870               	movf	??_Interrupciones,w
  1474  0262  00FA               	movwf	_dato
  1475  0263                     i1l958:
  1476                           
  1477                           ;main.c: 70: 
  1478  0263  035B               	decf	_b,w
  1479  0264  1D03               	btfss	3,2
  1480  0265  2A67               	goto	u22_21
  1481  0266  2A68               	goto	u22_20
  1482  0267                     u22_21:
  1483  0267  2A6A               	goto	i1l87
  1484  0268                     u22_20:
  1485  0268                     i1l960:
  1486                           
  1487                           ;main.c: 71: 
  1488  0268  01F9               	clrf	_d2
  1489                           
  1490                           ;main.c: 72:     OSCCONbits.IRCF2 = 1;
  1491  0269  01F8               	clrf	_d3
  1492  026A                     i1l87:
  1493  026A  0872               	movf	??_Interrupciones+2,w
  1494  026B  008A               	movwf	10
  1495  026C  0E71               	swapf	??_Interrupciones+1,w
  1496  026D  0083               	movwf	3
  1497  026E  0EFE               	swapf	btemp,f
  1498  026F  0E7E               	swapf	btemp,w
  1499  0270  0009               	retfie
  1500  0271                     __end_of_Interrupciones:
  1501  007E                     btemp	set	126	;btemp
  1502  007E                     wtemp0	set	126
  1503                           
  1504                           	psect	intentry
  1505  0004                     __pintentry:	
  1506                           ;incstack = 0
  1507                           ; Regs used in _Interrupciones: [wreg+status,2+status,0]
  1508                           
  1509  0004                     interrupt_function:
  1510  007E                     saved_w	set	btemp
  1511  0004  00FE               	movwf	btemp
  1512  0005  0E03               	swapf	3,w
  1513  0006  00F1               	movwf	??_Interrupciones+1
  1514  0007  080A               	movf	10,w
  1515  0008  00F2               	movwf	??_Interrupciones+2
  1516  0009  120A  118A  2A59   	ljmp	_Interrupciones
  1517                           
  1518                           	psect	config
  1519                           
  1520                           ;Config register CONFIG1 @ 0x2007
  1521                           ;	Oscillator Selection bits
  1522                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1523                           ;	Watchdog Timer Enable bit
  1524                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1525                           ;	Power-up Timer Enable bit
  1526                           ;	PWRTE = OFF, PWRT disabled
  1527                           ;	RE3/MCLR pin function select bit
  1528                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1529                           ;	Code Protection bit
  1530                           ;	CP = OFF, Program memory code protection is disabled
  1531                           ;	Data Code Protection bit
  1532                           ;	CPD = OFF, Data memory code protection is disabled
  1533                           ;	Brown Out Reset Selection bits
  1534                           ;	BOREN = OFF, BOR disabled
  1535                           ;	Internal External Switchover bit
  1536                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1537                           ;	Fail-Safe Clock Monitor Enabled bit
  1538                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1539                           ;	Low Voltage Programming Enable bit
  1540                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1541                           ;	In-Circuit Debugger Mode bit
  1542                           ;	DEBUG = 0x1, unprogrammed default
  1543  2007                     	org	8199
  1544  2007  30D5               	dw	12501
  1545                           
  1546                           ;Config register CONFIG2 @ 0x2008
  1547                           ;	Brown-out Reset Selection bit
  1548                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1549                           ;	Flash Program Memory Self Write Enable bits
  1550                           ;	WRT = OFF, Write protection off
  1551  2008                     	org	8200
  1552  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    1
    Data        184
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     11      60
    BANK1            80      0      64
    BANK3            96      0      72
    BANK2            96      0       0

Pointer List with Targets:

    envio_caract@st	PTR unsigned char  size(2) Largest target is 36
		 -> cad(BANK0[9]), puertob(BANK3[36]), puertoa(BANK3[36]), txt3(BANK0[18]), 
		 -> txt2(BANK0[19]), txt1(BANK1[36]), txt(BANK1[28]), 


Critical Paths under _main in COMMON

    _menu->_envio_caract
    _dato1->_envio_caract
    _envio_caract->_envio_char

Critical Paths under _Interrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_menu
    _menu->_dato1
    _dato1->_envio_caract

Critical Paths under _Interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     864
                                              8 BANK0      3     3      0
                               _menu
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0     864
                                              6 BANK0      2     2      0
                              _dato1
                       _envio_caract
 ---------------------------------------------------------------------------------
 (2) _dato1                                                3     3      0     432
                                              3 BANK0      3     3      0
                       _envio_caract
 ---------------------------------------------------------------------------------
 (2) _envio_caract                                         7     5      2     432
                                              4 COMMON     4     2      2
                                              0 BANK0      3     3      0
                         _envio_char
 ---------------------------------------------------------------------------------
 (3) _envio_char                                           1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupciones                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _menu
     _dato1
       _envio_caract
         _envio_char
     _envio_caract
       _envio_char
   _setup

 _Interrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      48       9       75.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CF      12        0.0%
ABS                  0      0      CF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 09 17:09:20 2021

                      _b 005B                        pc 0002                       l98 023C  
                     _d2 0079                       _d3 0078                       fsr 0004  
                    l113 00E8                      l122 0285                      l125 028D  
                    l119 01AD                      l128 01DE                      l750 0222  
                    l760 0229                      l752 0223                      l744 020F  
                    l770 0233                      l762 022D                      l754 0224  
                    l746 021E                      l772 0236                      l764 022E  
                    l756 0225                      l748 0221                      l862 0285  
                    l774 0237                      l766 0231                      l758 0226  
                    l864 028B                      l776 0238                      l768 0232  
                    l970 0174                      l778 023B                      l972 018D  
                    l980 01C5                      l974 0193                      l982 01C6  
                    l990 0048                      l968 0171                      l984 01CC  
                    l976 01AE                      l992 0051                      l986 01DA  
                    l978 01BC                      l994 0055                      l996 0062  
                    l988 0040                      l998 006B                      u110 028B  
                    u111 028A                      u300 00C3                      u301 00C2  
                    u230 017E                      u310 00E7                      u311 00E6  
                    u240 019F                      u250 01AD                      u251 01AC  
                    u260 0048                      u261 0047                      u270 0083  
                    u271 0082                      u327 024A                      u280 008F  
                    u337 009A                      u281 008E                      u290 00B3  
                    u347 00CE                      u291 00B2                      u357 01B8  
                    u367 01D4                      _cad 0047                      _ban 0020  
                    fsr0 0004                      _txt 00C4                      indf 0000  
                   l1000 0078                     l1010 008F                     l1002 007C  
                   l1020 00A8                     l1012 0090                     l1004 007D  
                   l1030 00BA                     l1022 00AC                     l1014 0092  
                   l1006 0083                     l1040 00C8                     l1024 00AE  
                   l1016 0094                     l1032 00BD                     l1008 0089  
                   l1042 00D2                     l1034 00C3                     l1026 00B3  
                   l1018 009E                     l1044 00DC                     l1036 00C4  
                   l1028 00B4                     l1060 0250                     l1046 00E0  
                   l1038 00C6                     l1048 00E2                     l1056 023D  
                   l1058 0242                     i1l87 026A                     _TXIF 0064  
                   _data 0294                     _dato 007A                     _main 023D  
                   _menu 0040                     _txt1 00A0                     _txt2 0022  
                   _txt3 0035                     btemp 007E                     start 000C  
                  ?_main 0070                    ?_menu 0070                    _ANSEL 0188  
                  i1l960 0268                    i1l954 0259                    i1l956 025F  
                  i1l958 0263                    _RCREG 001A                    u21_20 025F  
                  u21_21 025E                    u22_20 0268                    u22_21 0267  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 0019  
                  _dato1 01AE                    _setup 020F                    pclath 000A  
                  status 0003                    wtemp0 007E            ?_envio_caract 0074  
        __initialization 000F             __end_of_data 0295             __end_of_main 0259  
           __end_of_menu 00E9                   ??_main 0058                   ??_menu 0056  
                 ?_dato1 0070                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A           ??_envio_caract 0050                   saved_w 007E  
__end_of__initialization 003C           __pcstackCOMMON 0070             __pidataBANK0 01DF  
           __pidataBANK1 0131             __pidataBANK3 00E9            __end_of_dato1 01DF  
          __end_of_setup 023D                  ??_dato1 0053                  ??_setup 0073  
             __pbssBANK0 005B           envio_char@dato 0073           envio_caract@st 0074  
             __pmaintext 023D               __pintentry 0004     __end_of_envio_caract 01AE  
             __stringtab 028E               _envio_char 0284                  __ptext1 020F  
                __ptext2 0040                  __ptext3 01AE                  __ptext4 0171  
                __ptext5 0284                  __ptext6 0259  __size_of_Interrupciones 0018  
                _puertoa 01B4                  _puertob 0190     end_of_initialization 003C  
              _RCSTAbits 0018                _TXSTAbits 0098              ?_envio_char 0070  
  __size_of_envio_caract 003D              _BAUDCTLbits 0187      start_initialization 000F  
           _envio_caract 0171               init_fetch0 0271              __pdataBANK0 0020  
            __pdataBANK1 00A0              __pdataBANK3 0190           _Interrupciones 0259  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0050  
    __size_of_envio_char 000A            envio_caract@i 0076   __end_of_Interrupciones 0271  
              __pstrings 028E           __size_of_dato1 0031           __size_of_setup 002E  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
        ?_Interrupciones 0070              __stringbase 0293             ??_envio_char 0073  
     __end_of__stringtab 0294       __end_of_envio_char 028E            __size_of_main 001C  
          __size_of_menu 00A9               _INTCONbits 000B                 init_ram0 0275  
               intlevel1 0000                stringcode 028E               _OSCCONbits 008F  
               stringdir 028E                 stringtab 028E         ??_Interrupciones 0070  
